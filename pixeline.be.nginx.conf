server {
    server_name pixeline.be www.pixeline.be;
    root /var/www/pixeline.be/public;
    index index.php index.html;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

location /bluesky-list-manager {
    # Handle API requests - pass through to PHP files directly
    location ~ ^/bluesky-list-manager/api/(.*\.php)$ {
        try_files $uri =404;
        # Make sure PHP processing is configured here
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;  # Adjust version
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Handle OAuth callback
    location = /bluesky-list-manager/oauth-callback.html {
        try_files $uri =404;
    }

    # Handle client metadata endpoint
    location = /bluesky-list-manager/.well-known/oauth-client-metadata.json {
        try_files $uri @oauth_metadata;
    }

    # Handle static assets (CSS, JS, images)
    location ~ ^/bluesky-list-manager/assets/(.*)$ {
        try_files /bluesky-list-manager/dist/assets/$1 =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle static files
    location ~ ^/bluesky-list-manager/static/(.*)$ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # For all other requests, serve index.php (but NOT for API requests)
    location ~ ^/bluesky-list-manager/(?!api/).*$ {
        try_files $uri $uri/ /bluesky-list-manager/index.php?$query_string;
    }
}

# OAuth metadata handler
location @oauth_metadata {
    rewrite ^/bluesky-list-manager/.well-known/oauth-client-metadata.json$ /bluesky-list-manager/api/oauth.php?action=metadata last;
}

    # PHP handling
    location ~ \.php$ {
       include snippets/fastcgi-php.conf;
       fastcgi_pass unix:/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {
       deny all;
    }


    # Include the http2 snippet (which sets listen 443 ssl http2)
    include /etc/nginx/snippets/http2.conf;


    ssl_certificate /etc/letsencrypt/live/pixeline.be/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pixeline.be/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {
    if ($host = www.pixeline.be) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = pixeline.be) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name pixeline.be www.pixeline.be;
    return 404; # managed by Certbot




}